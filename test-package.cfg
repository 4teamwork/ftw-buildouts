# A buildout base configuration used for running tests only. It is optimized
# for jenkins (continuous integration).

[buildout]
extends =
    https://raw.github.com/4teamwork/ftw-buildouts/master/test-base.cfg

parts +=
    test-jenkins

    pep8
    pyflakes
    pylint-rc
    pylint

# mr.developer defaults for testing buildouts
auto-checkout = *
always-checkout = force
always-accept-server-certificate = true


# bin/test-jenkins : A script running the tests with coverage and running
# various code analysis tools.
[test-jenkins]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/test-coverage xml $@
    echo "pep8 -> ${buildout:results-dir}/pep8.log"
    bin/pep8 | tee ${buildout:results-dir}/pep8.log > /dev/null
    echo "pyflakes -> ${buildout:results-dir}/pyflakes.log"
    bin/pyflakes | tee ${buildout:results-dir}/pyflakes.log > /dev/null
    echo "pylint -> ${buildout:results-dir}/pylint.log"
    bin/pylint | tee ${buildout:results-dir}/pylint.log > /dev/null
output = ${buildout:directory}/bin/test-jenkins
mode = 755




# bin/pep8 : PEP8 validation of the packages source.
[pep8]
recipe = zc.recipe.egg
eggs = pep8
initialization =
    import os
    import subprocess
    os.chdir("${buildout:directory}")
    pkgdir = subprocess.Popen(
        '${buildout:directory}/bin/package-directory relative',
        shell=True, stdout=subprocess.PIPE).stdout.read().strip()
    sys.argv.extend([pkgdir, '--exclude=tests'])



# bin/pyflakes : Pyflakes validation of the packages source.
[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main
initialization =
    import os
    import subprocess
    os.chdir("${buildout:directory}")
    pkgdir = subprocess.Popen(
        '${buildout:directory}/bin/package-directory relative',
        shell=True, stdout=subprocess.PIPE).stdout.read().strip()
    sys.argv.extend([pkgdir])



# bin/pylint : Pylint validation of the packages source.
[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    ${test:eggs}
entry-points = pylint=pylint.lint:Run
initialization =
    import os
    import subprocess
    os.chdir("${buildout:directory}")
    pkgdir = subprocess.Popen(
        '${buildout:directory}/bin/package-directory relative',
        shell=True, stdout=subprocess.PIPE).stdout.read().strip()
arguments = ['--rcfile=${pylint-rc:rcfile}', '--ignore=tests', pkgdir] + sys.argv[1:]


# Downloads the default pylintrc.
[pylint-rc]
recipe = collective.recipe.shelloutput
rcfile = ${buildout:directory}/parts/pylint/pylintrc
rcurl = https://raw.github.com/4teamwork/ftw-buildouts/master/pylintrc
commands =
    cmd1 = mkdir -p `dirname ${pylint-rc:rcfile}`
    cmd2 = curl "${pylint-rc:rcurl}" > "${pylint-rc:rcfile}"
