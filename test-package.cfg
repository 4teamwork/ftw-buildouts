[buildout]

# Configuration variables:
package-name =

test-egg = ${buildout:package-name} [tests]
package-directory =


# =====================================================================

parts +=
    test
    test-coverage
    test-jenkins

    package-directory
    coverage
    pep8
    pyflakes
    pylint-rc
    pylint

develop = .

results-dir = ${buildout:directory}/parts/test-results

[test]
recipe = collective.xmltestreport
eggs = ${buildout:test-egg}
script = test
defaults = ['-s', '${buildout:package-name}', '--exit-with-status', '--auto-color', '--auto-progress']


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    mkdir -p ${buildout:results-dir}
    pkgdir=`${buildout:directory}/bin/package-directory`
    bin/coverage erase
    bin/coverage run --source=$pkgdir bin/test
    if [[ "$1" == "xml" ]]; then
        bin/coverage xml -i -o ${buildout:results-dir}/coverage.xml
    else
        bin/coverage html -i -d ${buildout:results-dir}/coverage/ && open ${buildout:results-dir}/coverage/index.html
    fi
output = ${buildout:directory}/bin/test-coverage
mode = 755


[test-jenkins]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    rm -rf ${buildout:results-dir}/*
    bin/test-coverage xml
    bin/pep8 > ${buildout:results-dir}/pep8.log
    bin/pyflakes > ${buildout:results-dir}/pyflakes.log
    bin/pylint > ${buildout:results-dir}/pylint.log
output = ${buildout:directory}/bin/test-jenkins
mode = 755


[package-directory]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    pkgdir="${buildout:package-directory}"
    pkgname="${buildout:package-name}"
    namepath=`echo $pkgname | sed "s:\.:/:g"`
    base="${buildout:directory}"
    paths=$(echo "$pkgdir" "$namepath" "src/$namepath" "src/$pkgname/$namepath")
    for path in $paths; do
        if [ -d "$base/$path" ]; then
            if [[ "$1" == "relative" ]]; then
                echo "$path"
            else
                echo "$base/$path"
            fi
            exit 0
        fi
    done
    exit 1

output = ${buildout:directory}/bin/package-directory
mode = 755



[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    import os
    os.environ['COVERAGE_FILE'] = "${buildout:results-dir}/coverage.data"


[pep8]
recipe = zc.recipe.egg
eggs = pep8
initialization =
    import os
    import subprocess
    os.chdir("${buildout:directory}")
    pkgdir = subprocess.Popen(
        '${buildout:directory}/bin/package-directory relative',
        shell=True, stdout=subprocess.PIPE).stdout.read().strip()
    sys.argv.extend([pkgdir, '--exclude=tests'])


[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main
initialization =
    import os
    import subprocess
    os.chdir("${buildout:directory}")
    pkgdir = subprocess.Popen(
        '${buildout:directory}/bin/package-directory relative',
        shell=True, stdout=subprocess.PIPE).stdout.read().strip()
    sys.argv.extend([pkgdir])



[pylint]
recipe = zc.recipe.egg
eggs = logilab.pylintinstaller
entry-points = pylint=pylint.lint:Run
initialization =
    import os
    import subprocess
    os.chdir("${buildout:directory}")
    pkgdir = subprocess.Popen(
        '${buildout:directory}/bin/package-directory relative',
        shell=True, stdout=subprocess.PIPE).stdout.read().strip()
arguments = ['--rcfile=${pylint-rc:rcfile}', '--ignore=tests', pkgdir] + sys.argv[1:]


[pylint-rc]
recipe = collective.recipe.shelloutput
rcfile = ${buildout:directory}/parts/pylint/pylintrc
# XXX FIX URL
rcurl = file::/Users/jone/projects/packages/ftw-buildouts/pylintrc
commands =
    cmd1 = mkdir -p `dirname ${pylint-rc:rcfile}`
    cmd2 = curl "${pylint-rc:rcurl}" > "${pylint-rc:rcfile}"
