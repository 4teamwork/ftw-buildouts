# Redis base configuration.
# Use development.cfg or production.cfg, not base.cfg directly.

[redis-settings]
# port = # set by development.cfg or production.cfg
# redis-version = # set by [version].cfg
bind = 127.0.0.1
timeout = 0
filenamebase = redis
dir = ${buildout:directory}/var/redis
configfile = ${buildout:parts-directory}/redis/${redis-settings:filenamebase}.conf
pidfile = ${redis-settings:dir}/${redis-settings:filenamebase}.pid
sockfile = ${redis-settings:dir}/${redis-settings:filenamebase}.sock
logfile = ${redis-settings:dir}/${redis-settings:filenamebase}.log
rdb_filename = ${redis-settings:filenamebase}.rdb
aof_filename = ${redis-settings:filenamebase}.aof
# appendonly enables AOF storage, which is not enabled in the default config.
# see http://redis.io/topics/persistence
appendonly = yes

# We cannot add a [buildout] secion in this file because it is
# an indirect, 3rd level extends and declaring a [buildout]
# part will break / reset values. Thanks buildout.
parts =
    redis-download
    redis-build
    redis-ensure-var-exists
    redis-server
    redis-py


[redis-download]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
url = http://download.redis.io/releases/redis-${redis-settings:redis-version}.tar.gz
md5sum = ${redis-settings:redis-md5sum}
destination = ${buildout:parts-directory}/redis-${redis-settings:redis-version}


[redis-build]
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds = cd ${redis-download:location} && make


[redis-ensure-var-exists]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = mkdir -p ${redis-settings:dir}


[redis-server]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ${redis-download:location}/src/redis-server ${redis-server:args-default} ${redis-server:args-custom}
args-default =
    --port ${redis-settings:port} \
    --bind ${redis-settings:bind} \
    --timeout ${redis-settings:timeout} \
    --pidfile ${redis-settings:pidfile} \
    --logfile ${redis-settings:logfile} \
    --unixsocket ${redis-settings:sockfile} \
    --dir ${redis-settings:dir} \
    --dbfilename ${redis-settings:rdb_filename} \
    --appendfilename ${redis-settings:aof_filename} \
    --appendonly ${redis-settings:appendonly}
args-custom =
output = ${buildout:directory}/bin/redis-server
mode = 755


[redis-py]
recipe = zc.recipe.egg:scripts
eggs = redis
interpreter = redispy
initialization =
    import redis
    r = redis.StrictRedis(host='localhost', port=${redis-settings:port}, db=0)
